# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import DeviceAPI_pb2 as DeviceAPI__pb2


class DeviceStub(object):
    """
    Version: 0.0.5

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetManifestBy3DAGLPolygon = channel.unary_unary(
                '/navmatix.gnss_forecast.device_api.Device/GetManifestBy3DAGLPolygon',
                request_serializer=DeviceAPI__pb2.GetManifestBy3DAGLPolygonRequest.SerializeToString,
                response_deserializer=DeviceAPI__pb2.Manifest.FromString,
                )
        self.GetManifestBy3DWGS84Polygon = channel.unary_unary(
                '/navmatix.gnss_forecast.device_api.Device/GetManifestBy3DWGS84Polygon',
                request_serializer=DeviceAPI__pb2.GetManifestBy3DWGS84PolygonRequest.SerializeToString,
                response_deserializer=DeviceAPI__pb2.Manifest.FromString,
                )
        self.GetManifestBy3DAGLPath = channel.unary_unary(
                '/navmatix.gnss_forecast.device_api.Device/GetManifestBy3DAGLPath',
                request_serializer=DeviceAPI__pb2.GetManifestBy3DAGLPathRequest.SerializeToString,
                response_deserializer=DeviceAPI__pb2.Manifest.FromString,
                )
        self.GetManifestBy3DWGS84Path = channel.unary_unary(
                '/navmatix.gnss_forecast.device_api.Device/GetManifestBy3DWGS84Path',
                request_serializer=DeviceAPI__pb2.GetManifestBy3DWGS84PathRequest.SerializeToString,
                response_deserializer=DeviceAPI__pb2.Manifest.FromString,
                )


class DeviceServicer(object):
    """
    Version: 0.0.5

    """

    def GetManifestBy3DAGLPolygon(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetManifestBy3DWGS84Polygon(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetManifestBy3DAGLPath(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetManifestBy3DWGS84Path(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeviceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetManifestBy3DAGLPolygon': grpc.unary_unary_rpc_method_handler(
                    servicer.GetManifestBy3DAGLPolygon,
                    request_deserializer=DeviceAPI__pb2.GetManifestBy3DAGLPolygonRequest.FromString,
                    response_serializer=DeviceAPI__pb2.Manifest.SerializeToString,
            ),
            'GetManifestBy3DWGS84Polygon': grpc.unary_unary_rpc_method_handler(
                    servicer.GetManifestBy3DWGS84Polygon,
                    request_deserializer=DeviceAPI__pb2.GetManifestBy3DWGS84PolygonRequest.FromString,
                    response_serializer=DeviceAPI__pb2.Manifest.SerializeToString,
            ),
            'GetManifestBy3DAGLPath': grpc.unary_unary_rpc_method_handler(
                    servicer.GetManifestBy3DAGLPath,
                    request_deserializer=DeviceAPI__pb2.GetManifestBy3DAGLPathRequest.FromString,
                    response_serializer=DeviceAPI__pb2.Manifest.SerializeToString,
            ),
            'GetManifestBy3DWGS84Path': grpc.unary_unary_rpc_method_handler(
                    servicer.GetManifestBy3DWGS84Path,
                    request_deserializer=DeviceAPI__pb2.GetManifestBy3DWGS84PathRequest.FromString,
                    response_serializer=DeviceAPI__pb2.Manifest.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'navmatix.gnss_forecast.device_api.Device', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Device(object):
    """
    Version: 0.0.5

    """

    @staticmethod
    def GetManifestBy3DAGLPolygon(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/navmatix.gnss_forecast.device_api.Device/GetManifestBy3DAGLPolygon',
            DeviceAPI__pb2.GetManifestBy3DAGLPolygonRequest.SerializeToString,
            DeviceAPI__pb2.Manifest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetManifestBy3DWGS84Polygon(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/navmatix.gnss_forecast.device_api.Device/GetManifestBy3DWGS84Polygon',
            DeviceAPI__pb2.GetManifestBy3DWGS84PolygonRequest.SerializeToString,
            DeviceAPI__pb2.Manifest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetManifestBy3DAGLPath(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/navmatix.gnss_forecast.device_api.Device/GetManifestBy3DAGLPath',
            DeviceAPI__pb2.GetManifestBy3DAGLPathRequest.SerializeToString,
            DeviceAPI__pb2.Manifest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetManifestBy3DWGS84Path(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/navmatix.gnss_forecast.device_api.Device/GetManifestBy3DWGS84Path',
            DeviceAPI__pb2.GetManifestBy3DWGS84PathRequest.SerializeToString,
            DeviceAPI__pb2.Manifest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class AuthStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Auth = channel.unary_unary(
                '/navmatix.gnss_forecast.device_api.Auth/Auth',
                request_serializer=DeviceAPI__pb2.AuthRequest.SerializeToString,
                response_deserializer=DeviceAPI__pb2.AuthResponse.FromString,
                )


class AuthServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Auth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Auth': grpc.unary_unary_rpc_method_handler(
                    servicer.Auth,
                    request_deserializer=DeviceAPI__pb2.AuthRequest.FromString,
                    response_serializer=DeviceAPI__pb2.AuthResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'navmatix.gnss_forecast.device_api.Auth', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Auth(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Auth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/navmatix.gnss_forecast.device_api.Auth/Auth',
            DeviceAPI__pb2.AuthRequest.SerializeToString,
            DeviceAPI__pb2.AuthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
